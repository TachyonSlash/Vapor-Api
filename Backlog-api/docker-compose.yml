# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker compose build
#       Start app: docker compose up app
#  Start database: docker compose up db
#  Run migrations: docker compose run migrate
#       Stop all: docker compose down (add -v to wipe db)
#

volumes:
  db_data:

# x-shared_environment: &shared_environment
#   LOG_LEVEL: ${LOG_LEVEL:-debug}
#   DATABASE_HOST: db
#   DATABASE_NAME: vapor_database
#   DATABASE_USERNAME: vapor_username
#   DATABASE_PASSWORD: vapor_password
  
services:
  app:
    image: backlog-api:latest
    build:
      context: .
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 3306
      DATABASE_USERNAME: vapor_username
      DATABASE_PASSWORD: ${DB_PASSWORD} # <--- CAMBIO 1: Usar variable de entorno para la contraseña
      DATABASE_NAME: vapor_database
    depends_on:
      - db
    ports:
      - '80:8080' # <--- CAMBIO 2: Mapear el puerto estándar HTTP del host al 8080 del contenedor
    # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]
    restart: always # <--- CAMBIO 3: Asegurar que la app se reinicie automáticamente
  migrate:
    image: backlog-api:latest
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 3306
      DATABASE_USERNAME: vapor_username
      DATABASE_PASSWORD: ${DB_PASSWORD} # <--- CAMBIO 1 (también aquí): Usar variable de entorno
      DATABASE_NAME: vapor_database
    depends_on:
      - db
    command: ["migrate", "-y"]
    restart: "no"
  # revert:
  #   image: backlog-api:latest
  #   build:
  #     context: .
  #   environment:
  #     <<: *shared_environment
  #   depends_on:
  #     - db
  #   command: ["migrate", "--revert", "--yes"]
  #   deploy:
  #     replicas: 0
  db:
    image: mysql:8
    volumes:
      - db_data:/var/lib/mysql
    environment:
      MYSQL_USER: vapor_username
      MYSQL_PASSWORD: ${DB_PASSWORD} # <--- CAMBIO 1 (también aquí): Usar variable de entorno
      MYSQL_DATABASE: vapor_database
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
    # ports: # <--- CAMBIO 4: COMENTAR/ELIMINAR la exposición directa de la DB a Internet
    #   - '3310:3306'
    restart: always # <--- CAMBIO 5: Asegurar que la DB se reinicie automáticamente